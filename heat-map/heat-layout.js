// Generated by CoffeeScript 1.3.1
var heatMap, peek,
  __hasProp = {}.hasOwnProperty;

peek = function(x) {
  console.log(x);
  return x;
};

heatMap = function(_arg) {
  var cool, coord, height, levels, map, max, min, nodes, pow, spread, sqrt, warm, width, x, y, _i, _j;
  width = _arg.width, height = _arg.height, levels = _arg.levels;
  map = {};
  coord = function(x, y) {
    return x * height + y;
  };
  nodes = [];
  for (x = _i = 0; 0 <= width ? _i < width : _i > width; x = 0 <= width ? ++_i : --_i) {
    for (y = _j = 0; 0 <= height ? _j < height : _j > height; y = 0 <= height ? ++_j : --_j) {
      nodes.push({
        x: x,
        y: y,
        heat: 0,
        coords: "" + x + "," + y
      });
    }
  }
  sqrt = Math.sqrt, pow = Math.pow, max = Math.max, min = Math.min;
  cool = function(delta) {
    var coords, mult, node, _;
    mult = max(1 - (1 * (delta / 450)), 0);
    for (coords in map) {
      if (!__hasProp.call(map, coords)) continue;
      _ = map[coords];
      node = nodes[coords];
      if (mult > 0 && node.heat > 1e-5) {
        node.heat *= mult;
      } else {
        node.heat = 0;
        delete map[coords];
      }
    }
    return false;
  };
  spread = function(x1, y1, x2, y2) {
    return pow(2, -(pow(x1 - x2, 2) + pow(y1 - y2, 2)));
  };
  warm = function(data) {
    var added, datum, point, r, x1, x2, y1, y2, _k, _l, _len, _m, _n, _ref, _ref1, _ref2, _ref3;
    for (_k = 0, _len = data.length; _k < _len; _k++) {
      datum = data[_k];
      x1 = datum.x;
      y1 = datum.y;
      added = {};
      for (r = _l = 0; _l <= levels; r = _l += 1) {
        for (x2 = _m = _ref = max(x1 - r, 0), _ref1 = min(x1 + r, width - 1); _m <= _ref1; x2 = _m += 1) {
          for (y2 = _n = _ref2 = max(y1 - r, 0), _ref3 = min(y1 + r, height - 1); _n <= _ref3; y2 = _n += 1) {
            point = coord(x2, y2);
            if (!(point in added)) {
              nodes[point].heat += spread(x1, y1, x2, y2);
              map[point] = true;
              added[point] = true;
            }
          }
        }
      }
    }
    return nodes;
  };
  return function(_arg1) {
    var delta, nodes;
    delta = _arg1.delta, nodes = _arg1.nodes;
    if (delta) {
      cool(delta);
    }
    if (nodes) {
      return warm(nodes);
    }
  };
};

if (this.module) {
  module.exports = heatMap;
}
